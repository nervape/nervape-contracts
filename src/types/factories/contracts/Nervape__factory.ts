/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Nervape, NervapeInterface } from "../../contracts/Nervape";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "maxSupply",
        type: "uint16",
      },
    ],
    name: "addNewClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "classOf",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastClassId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "maxSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "tokensOfOwnerByClass",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "totalSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200277f3803806200277f833981016040819052620000349162000268565b8251839083906200004d906000906020850190620000f5565b50805162000063906001906020840190620000f5565b505050620000806200007a6200009f60201b60201c565b620000a3565b80516200009590600b906020840190620000f5565b5050505062000336565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010390620002f9565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c357600080fd5b81516001600160401b0380821115620001e057620001e06200019b565b604051601f8301601f19908116603f011681019082821181831017156200020b576200020b6200019b565b816040528381526020925086838588010111156200022857600080fd5b600091505b838210156200024c57858201830151818301840152908201906200022d565b838211156200025e5760008385830101525b9695505050505050565b6000806000606084860312156200027e57600080fd5b83516001600160401b03808211156200029657600080fd5b620002a487838801620001b1565b94506020860151915080821115620002bb57600080fd5b620002c987838801620001b1565b93506040860151915080821115620002e057600080fd5b50620002ef86828701620001b1565b9150509250925092565b600181811c908216806200030e57607f821691505b602082108114156200033057634e487b7160e01b600052602260045260246000fd5b50919050565b61243980620003466000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063715018a61161012a578063afcafc0e116100bd578063e78cea921161008c578063f2fde38b11610071578063f2fde38b146104b6578063fca3b5aa146104c9578063fdbf5d63146104dc57600080fd5b8063e78cea9214610467578063e985e9c51461047a57600080fd5b8063afcafc0e14610419578063b88d4fde1461042c578063c87b56dd1461043f578063cd8669e11461045257600080fd5b806395d89b41116100f957806395d89b41146103c45780639c205513146103cc578063a22cb465146103df578063ada90a7f146103f257600080fd5b8063715018a6146103855780638c2a993e1461038d5780638da5cb5b146103a05780638dd14802146103b157600080fd5b80632f745c59116101a257806355f804b31161017157806355f804b3146103445780636352211e146103575780636c0360eb1461036a57806370a082311461037257600080fd5b80632f745c59146102e557806342842e0e146102f85780634324aa211461030b5780634f6ccce71461033157600080fd5b8063095ea7b3116101de578063095ea7b31461028b57806318160ddd146102a057806323b872dd146102b25780632f00f913146102c557600080fd5b806301ffc9a71461021057806306fdde0314610238578063075461721461024d578063081812fc14610278575b600080fd5b61022361021e366004611e8c565b610503565b60405190151581526020015b60405180910390f35b61024061052e565b60405161022f9190611f01565b600c54610260906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b610260610286366004611f14565b6105c0565b61029e610299366004611f49565b6105e7565b005b6008545b60405190815260200161022f565b61029e6102c0366004611f73565b610702565b6102d86102d3366004611fc1565b61077a565b60405161022f9190611ff4565b6102a46102f3366004611f49565b61084b565b61029e610306366004611f73565b6108f3565b61031e610319366004611f14565b61090e565b60405161ffff909116815260200161022f565b6102a461033f366004611f14565b610982565b61029e6103523660046120c4565b610a26565b610260610365366004611f14565b610a45565b610240610aaa565b6102a461038036600461210d565b610b38565b61029e610bd2565b61029e61039b366004611f49565b610be6565b600a546001600160a01b0316610260565b61029e6103bf36600461210d565b610d6f565b610240610d99565b61029e6103da366004612128565b610da8565b61029e6103ed366004612152565b610f63565b61031e61040036600461218e565b61ffff9081166000908152600e60205260409020541690565b61029e61042736600461218e565b610f6e565b61029e61043a3660046121a9565b611039565b61024061044d366004611f14565b6110b8565b600d5461031e90600160a01b900461ffff1681565b600d54610260906001600160a01b031681565b610223610488366004612225565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61029e6104c436600461210d565b61111f565b61029e6104d736600461210d565b6111af565b61031e6104ea36600461218e565b61ffff9081166000908152600f60205260409020541690565b60006001600160e01b0319821663780e9d6360e01b14806105285750610528826111d9565b92915050565b60606000805461053d90612241565b80601f016020809104026020016040519081016040528092919081815260200182805461056990612241565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905090565b60006105cb82611229565b506000908152600460205260409020546001600160a01b031690565b60006105f282610a45565b9050806001600160a01b0316836001600160a01b031614156106655760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061068157506106818133610488565b6106f35760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161065c565b6106fd838361128d565b505050565b61070c33826112fb565b61076f5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161065c565b6106fd83838361137a565b6060600061078784610b38565b905060008167ffffffffffffffff8111156107a4576107a4612038565b6040519080825280602002602001820160405280156107cd578160200160208202803683370190505b5090506000805b838110156108405760006107e8888361084b565b90506107f38161090e565b61ffff168761ffff16141561082d5780848461080e81612292565b955081518110610820576108206122ad565b6020026020010181815250505b508061083881612292565b9150506107d4565b508152949350505050565b600061085683610b38565b82106108ca5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161065c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106fd83838360405180602001604052806000815250611039565b60008061091d612710846122d9565b905060008161ffff161180156109445750600d5461ffff600160a01b909104811690821611155b6105285760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161065c565b600061098d60085490565b8210610a015760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161065c565b60088281548110610a1457610a146122ad565b90600052602060002001549050919050565b610a2e611539565b8051610a4190600b906020840190611ddd565b5050565b6000818152600260205260408120546001600160a01b0316806105285760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161065c565b600b8054610ab790612241565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390612241565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505081565b60006001600160a01b038216610bb65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161065c565b506001600160a01b031660009081526003602052604090205490565b610bda611539565b610be46000611593565b565b600d546001600160a01b03163314610c405760405162461bcd60e51b815260206004820152600a60248201527f4e6f742062726964676500000000000000000000000000000000000000000000604482015260640161065c565b6000610c4b8261090e565b905060008161ffff16118015610c725750600d5461ffff600160a01b909104811690821611155b610cb05760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015260640161065c565b61ffff8181166000908152600e6020908152604080832054600f90925290912054908216911610610d235760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c7900000000000000000000000000604482015260640161065c565b61ffff8082166000908152600f602052604081208054600193919291610d4b918591166122ed565b92506101000a81548161ffff021916908361ffff1602179055506106fd83836115e5565b610d77611539565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805461053d90612241565b600c546001600160a01b03163314610e025760405162461bcd60e51b815260206004820152600a60248201527f4e6f74206d696e74657200000000000000000000000000000000000000000000604482015260640161065c565b60008261ffff16118015610e275750600d5461ffff600160a01b909104811690831611155b610e735760405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420636c61737349640000000000000000000000000000000000604482015260640161065c565b61ffff8281166000908152600e6020908152604080832054600f90925290912054908216911610610ee65760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c7900000000000000000000000000604482015260640161065c565b61ffff8281166000818152600f602052604081205490921690610f0b90612710612313565b610f159190612332565b61ffff8085166000908152600f6020526040812080549394506001939092610f3f918591166122ed565b92506101000a81548161ffff021916908361ffff1602179055506106fd82826115e5565b610a413383836115ff565b610f76611539565b6127108161ffff161115610fcc5760405162461bcd60e51b815260206004820152601860248201527f4d617820737570706c7920657863656564732031303030300000000000000000604482015260640161065c565b80600e6000600d601481819054906101000a900461ffff16610fed9061234a565b91906101000a81548161ffff021916908361ffff160217905561ffff1661ffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555050565b61104333836112fb565b6110a65760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161065c565b6110b2848484846116ce565b50505050565b60606110c382611229565b60006110cd61174c565b905060008151116110ed5760405180602001604052806000815250611118565b806110f78461175b565b60405160200161110892919061236c565b6040516020818303038152906040525b9392505050565b611127611539565b6001600160a01b0381166111a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161065c565b6111ac81611593565b50565b6111b7611539565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b148061120a57506001600160e01b03198216635b5e139f60e01b145b8061052857506301ffc9a760e01b6001600160e01b0319831614610528565b6000818152600260205260409020546001600160a01b03166111ac5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161065c565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112c282610a45565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061130783610a45565b9050806001600160a01b0316846001600160a01b0316148061134e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806113725750836001600160a01b0316611367846105c0565b6001600160a01b0316145b949350505050565b826001600160a01b031661138d82610a45565b6001600160a01b0316146114095760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161065c565b6001600160a01b03821661146b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161065c565b611476838383611871565b61148160008261128d565b6001600160a01b03831660009081526003602052604081208054600192906114aa908490612392565b90915550506001600160a01b03821660009081526003602052604081208054600192906114d8908490612332565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610be45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a41828260405180602001604052806000815250611929565b816001600160a01b0316836001600160a01b031614156116615760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161065c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116d984848461137a565b6116e5848484846119a7565b6110b25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b6060600b805461053d90612241565b60608161177f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156117a9578061179381612292565b91506117a29050600a836122d9565b9150611783565b60008167ffffffffffffffff8111156117c4576117c4612038565b6040519080825280601f01601f1916602001820160405280156117ee576020820181803683370190505b5090505b841561137257611803600183612392565b9150611810600a866123a9565b61181b906030612332565b60f81b818381518110611830576118306122ad565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061186a600a866122d9565b94506117f2565b6001600160a01b0383166118cc576118c781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118ef565b816001600160a01b0316836001600160a01b0316146118ef576118ef8382611aff565b6001600160a01b038216611906576106fd81611b9c565b826001600160a01b0316826001600160a01b0316146106fd576106fd8282611c4b565b6119338383611c8f565b61194060008484846119a7565b6106fd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b60006001600160a01b0384163b15611af457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119eb9033908990889088906004016123bd565b602060405180830381600087803b158015611a0557600080fd5b505af1925050508015611a35575060408051601f3d908101601f19168201909252611a32918101906123f9565b60015b611ada573d808015611a63576040519150601f19603f3d011682016040523d82523d6000602084013e611a68565b606091505b508051611ad25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611372565b506001949350505050565b60006001611b0c84610b38565b611b169190612392565b600083815260076020526040902054909150808214611b69576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611bae90600190612392565b60008381526009602052604081205460088054939450909284908110611bd657611bd66122ad565b906000526020600020015490508060088381548110611bf757611bf76122ad565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c2f57611c2f612416565b6001900381819060005260206000200160009055905550505050565b6000611c5683610b38565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611ce55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161065c565b6000818152600260205260409020546001600160a01b031615611d4a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161065c565b611d5660008383611871565b6001600160a01b0382166000908152600360205260408120805460019290611d7f908490612332565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611de990612241565b90600052602060002090601f016020900481019282611e0b5760008555611e51565b82601f10611e2457805160ff1916838001178555611e51565b82800160010185558215611e51579182015b82811115611e51578251825591602001919060010190611e36565b50611e5d929150611e61565b5090565b5b80821115611e5d5760008155600101611e62565b6001600160e01b0319811681146111ac57600080fd5b600060208284031215611e9e57600080fd5b813561111881611e76565b60005b83811015611ec4578181015183820152602001611eac565b838111156110b25750506000910152565b60008151808452611eed816020860160208601611ea9565b601f01601f19169290920160200192915050565b6020815260006111186020830184611ed5565b600060208284031215611f2657600080fd5b5035919050565b80356001600160a01b0381168114611f4457600080fd5b919050565b60008060408385031215611f5c57600080fd5b611f6583611f2d565b946020939093013593505050565b600080600060608486031215611f8857600080fd5b611f9184611f2d565b9250611f9f60208501611f2d565b9150604084013590509250925092565b803561ffff81168114611f4457600080fd5b60008060408385031215611fd457600080fd5b611fdd83611f2d565b9150611feb60208401611faf565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561202c57835183529284019291840191600101612010565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561206957612069612038565b604051601f8501601f19908116603f0116810190828211818310171561209157612091612038565b816040528093508581528686860111156120aa57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156120d657600080fd5b813567ffffffffffffffff8111156120ed57600080fd5b8201601f810184136120fe57600080fd5b6113728482356020840161204e565b60006020828403121561211f57600080fd5b61111882611f2d565b6000806040838503121561213b57600080fd5b61214483611faf565b9150611feb60208401611f2d565b6000806040838503121561216557600080fd5b61216e83611f2d565b91506020830135801515811461218357600080fd5b809150509250929050565b6000602082840312156121a057600080fd5b61111882611faf565b600080600080608085870312156121bf57600080fd5b6121c885611f2d565b93506121d660208601611f2d565b925060408501359150606085013567ffffffffffffffff8111156121f957600080fd5b8501601f8101871361220a57600080fd5b6122198782356020840161204e565b91505092959194509250565b6000806040838503121561223857600080fd5b61214483611f2d565b600181811c9082168061225557607f821691505b6020821081141561227657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156122a6576122a661227c565b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826122e8576122e86122c3565b500490565b600061ffff80831681851680830382111561230a5761230a61227c565b01949350505050565b600081600019048311821515161561232d5761232d61227c565b500290565b600082198211156123455761234561227c565b500190565b600061ffff808316818114156123625761236261227c565b6001019392505050565b6000835161237e818460208801611ea9565b83519083019061230a818360208801611ea9565b6000828210156123a4576123a461227c565b500390565b6000826123b8576123b86122c3565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526123ef6080830184611ed5565b9695505050505050565b60006020828403121561240b57600080fd5b815161111881611e76565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type NervapeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NervapeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nervape__factory extends ContractFactory {
  constructor(...args: NervapeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nervape> {
    return super.deploy(
      name_,
      symbol_,
      uri_,
      overrides || {}
    ) as Promise<Nervape>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, uri_, overrides || {});
  }
  override attach(address: string): Nervape {
    return super.attach(address) as Nervape;
  }
  override connect(signer: Signer): Nervape__factory {
    return super.connect(signer) as Nervape__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NervapeInterface {
    return new utils.Interface(_abi) as NervapeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Nervape {
    return new Contract(address, _abi, signerOrProvider) as Nervape;
  }
}
