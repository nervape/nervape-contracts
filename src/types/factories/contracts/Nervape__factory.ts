/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Nervape, NervapeInterface } from "../../contracts/Nervape";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "maxSupply",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "reserved",
        type: "uint16",
      },
    ],
    name: "addNewClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "classOf",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint16",
        name: "typeId_",
        type: "uint16",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastClassId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "maxSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "mintable",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ownerMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "tokensOfOwnerByClass",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "totalSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "typeId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bab806100206000396000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c80638c2a993e1161017b578063b88d4fde116100d8578063e985e9c51161008c578063f4bfdebf11610071578063f4bfdebf146105dd578063fca3b5aa146105f0578063fdbf5d631461060357600080fd5b8063e985e9c51461058e578063f2fde38b146105ca57600080fd5b8063cd8669e1116100bd578063cd8669e114610553578063d5f7ec8d14610568578063e78cea921461057b57600080fd5b8063b88d4fde1461052d578063c87b56dd1461054057600080fd5b806397a3853a1161012f578063a22cb46511610114578063a22cb465146104cf578063aa271e1a146104e2578063ada90a7f1461050657600080fd5b806397a3853a146104a95780639c205513146104bc57600080fd5b80638dd14802116101605780638dd14802146104795780638f940f631461048c57806395d89b41146104a157600080fd5b80638c2a993e146104555780638da5cb5b1461046857600080fd5b80632f745c591161022957806355f804b3116101dd5780636c0360eb116101c25780636c0360eb1461043257806370a082311461043a578063715018a61461044d57600080fd5b806355f804b31461040c5780636352211e1461041f57600080fd5b806342842e0e1161020e57806342842e0e146103d35780634324aa21146103e65780634f6ccce7146103f957600080fd5b80632f745c59146103ad5780633092afd5146103c057600080fd5b806318160ddd1161028057806323b872dd1161026557806323b872dd146103675780632549edd01461037a5780632f00f9131461038d57600080fd5b806318160ddd1461032f5780631f98e3831461034157600080fd5b806301ffc9a7146102b257806306fdde03146102da578063081812fc146102ef578063095ea7b31461031a575b600080fd5b6102c56102c036600461253f565b61062a565b60405190151581526020015b60405180910390f35b6102e2610655565b6040516102d191906125b4565b6103026102fd3660046125c7565b6106e7565b6040516001600160a01b0390911681526020016102d1565b61032d6103283660046125fc565b61070e565b005b6099545b6040519081526020016102d1565b61035461034f366004612638565b610829565b60405161ffff90911681526020016102d1565b61032d610375366004612653565b610912565b61032d61038836600461273b565b61098a565b6103a061039b3660046127af565b610aeb565b6040516102d191906127e2565b6103336103bb3660046125fc565b610bbc565b61032d6103ce366004612826565b610c64565b61032d6103e1366004612653565b610c8e565b6103546103f43660046125c7565b610ca9565b6103336104073660046125c7565b610dea565b61032d61041a366004612841565b610e8e565b61030261042d3660046125c7565b610ead565b6102e2610f12565b610333610448366004612826565b610fa0565b61032d61103a565b61032d6104633660046125fc565b61104e565b60c9546001600160a01b0316610302565b61032d610487366004612826565b61115d565b60fc5461035490600160a01b900461ffff1681565b6102e2611187565b61032d6104b7366004612876565b611196565b6103336104ca366004612892565b611282565b61032d6104dd3660046128bc565b6113a7565b6102c56104f0366004612826565b6101006020526000908152604090205460ff1681565b610354610514366004612638565b61ffff908116600090815260fd60205260409020541690565b61032d61053b3660046128f8565b6113b2565b6102e261054e3660046125c7565b61142b565b60fc5461035490600160b01b900461ffff1681565b61032d610576366004612892565b611491565b60fc54610302906001600160a01b031681565b6102c561059c366004612974565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61032d6105d8366004612826565b611593565b6103336105eb366004612638565b611623565b61032d6105fe366004612826565b611682565b610354610611366004612638565b61ffff908116600090815260fe60205260409020541690565b60006001600160e01b0319821663780e9d6360e01b148061064f575061064f826116af565b92915050565b60606065805461066490612990565b80601f016020809104026020016040519081016040528092919081815260200182805461069090612990565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b60006106f2826116ff565b506000908152606960205260409020546001600160a01b031690565b600061071982610ead565b9050806001600160a01b0316836001600160a01b0316141561078c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806107a857506107a8813361059c565b61081a5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610783565b6108248383611763565b505050565b6000610834826117d1565b61ffff828116600090815260ff602090815260408083205460fd90925290912054908216911610156108ce5760405162461bcd60e51b815260206004820152602960248201527f4d617820737570706c79206c657373207468616e207465616d2072657365727660448201527f656420616d6f756e7400000000000000000000000000000000000000000000006064820152608401610783565b61ffff828116600090815260ff602090815260408083205460fe83528184205460fd909352922054918316926109089291811691166129e1565b61064f91906129e1565b61091c3382611842565b61097f5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610783565b6108248383836118c1565b600054610100900460ff16158080156109aa5750600054600160ff909116105b806109c45750303b1580156109c4575060005460ff166001145b610a365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610783565b6000805460ff191660011790558015610a59576000805461ff0019166101001790555b610a61611a80565b610a6b8484611af3565b60fc80547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff16600160a01b61ffff8516021790558015610ae5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60606000610af884610fa0565b905060008167ffffffffffffffff811115610b1557610b1561268f565b604051908082528060200260200182016040528015610b3e578160200160208202803683370190505b5090506000805b83811015610bb1576000610b598883610bbc565b9050610b6481610ca9565b61ffff168761ffff161415610b9e57808484610b7f81612a04565b955081518110610b9157610b91612a1f565b6020026020010181815250505b5080610ba981612a04565b915050610b45565b508152949350505050565b6000610bc783610fa0565b8210610c3b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610783565b506001600160a01b03919091166000908152609760209081526040808320938352929052205490565b610c6c611b68565b6001600160a01b0316600090815261010060205260409020805460ff19169055565b610824838383604051806020016040528060008152506113b2565b60fc54600090610cc790600160a01b900461ffff1662989680612a35565b8211610d155760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964207479706520494400000000000000000000000000000000006044820152606401610783565b60fc5460009061271090610d3790600160a01b900461ffff1662989680612a35565b610d419085612a54565b610d4b9190612a81565b60fc5490915060009061271090610d7090600160a01b900461ffff1662989680612a35565b610d7a9086612a54565b610d849190612a95565b905060008161ffff1611610dda5760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420746f6b656e204944000000000000000000000000000000006044820152606401610783565b610de3826117d1565b5092915050565b6000610df560995490565b8210610e695760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610783565b60998281548110610e7c57610e7c612a1f565b90600052602060002001549050919050565b610e96611b68565b8051610ea99060fb906020840190612490565b5050565b6000818152606760205260408120546001600160a01b03168061064f5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610783565b60fb8054610f1f90612990565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4b90612990565b8015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b505050505081565b60006001600160a01b03821661101e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610783565b506001600160a01b031660009081526068602052604090205490565b611042611b68565b61104c6000611bc2565b565b60fc546001600160a01b031633146110a85760405162461bcd60e51b815260206004820152600a60248201527f4e6f7420627269646765000000000000000000000000000000000000000000006044820152606401610783565b60006110b382610ca9565b905060006110c082610829565b61ffff16116111115760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c79000000000000000000000000006044820152606401610783565b61ffff808216600090815260fe60205260408120805460019391929161113991859116612aa9565b92506101000a81548161ffff021916908361ffff1602179055506108248383611c14565b611165611b68565b60fc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606066805461066490612990565b61119e611b68565b6127108261ffff1611156111f45760405162461bcd60e51b815260206004820152601860248201527f4d617820737570706c79206578636565647320313030303000000000000000006044820152606401610783565b600160fc60168282829054906101000a900461ffff166112149190612aa9565b82546101009290920a61ffff81810219909316918316021790915560fc8054600160b01b908190048316600090815260fd60209081526040808320805461ffff199081169a88169a909a1790559354929092048416815260ff90915220805490941692169190911790915550565b336000908152610100602052604081205460ff166112e25760405162461bcd60e51b815260206004820152600a60248201527f4e6f74206d696e746572000000000000000000000000000000000000000000006044820152606401610783565b6112eb836117d1565b60006112f684610829565b61ffff16116113475760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c79000000000000000000000000006044820152606401610783565b600061135284611623565b61ffff808616600090815260fe602052604081208054939450600193909261137c91859116612aa9565b92506101000a81548161ffff021916908361ffff1602179055506113a08382611c14565b9392505050565b610ea9338383611d62565b6113bc3383611842565b61141f5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610783565b610ae584848484611e31565b6060611436826116ff565b6000611440611eba565b9050600081511161146057604051806020016040528060008152506113a0565b8061146a84611ec9565b60405160200161147b929190612acf565b6040516020818303038152906040529392505050565b611499611b68565b6114a2826117d1565b61ffff808316600090815260ff6020526040902054166115045760405162461bcd60e51b815260206004820152601060248201527f4e6f207465616d207265736572766573000000000000000000000000000000006044820152606401610783565b60005b61ffff808416600090815260ff60205260409020548116908216101561082457600061153284611623565b61ffff808616600090815260fe602052604081208054939450600193909261155c91859116612aa9565b92506101000a81548161ffff021916908361ffff1602179055506115808382611c14565b508061158b81612af5565b915050611507565b61159b611b68565b6001600160a01b0381166116175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610783565b61162081611bc2565b50565b61ffff818116600081815260fe60205260408120549092169061164890612710612a35565b60fc5461166390600160a01b900461ffff1662989680612a35565b61166d9190612b17565b6116779190612b17565b61064f906001612b17565b61168a611b68565b6001600160a01b0316600090815261010060205260409020805460ff19166001179055565b60006001600160e01b031982166380ac58cd60e01b14806116e057506001600160e01b03198216635b5e139f60e01b145b8061064f57506301ffc9a760e01b6001600160e01b031983161461064f565b6000818152606760205260409020546001600160a01b03166116205760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610783565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061179882610ead565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008161ffff161180156117f6575060fc5461ffff600160b01b909104811690821611155b6116205760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420636c617373204964000000000000000000000000000000006044820152606401610783565b60008061184e83610ead565b9050806001600160a01b0316846001600160a01b0316148061189557506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806118b95750836001600160a01b03166118ae846106e7565b6001600160a01b0316145b949350505050565b826001600160a01b03166118d482610ead565b6001600160a01b0316146119505760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610783565b6001600160a01b0382166119b25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610783565b6119bd838383611fdf565b6119c8600082611763565b6001600160a01b03831660009081526068602052604081208054600192906119f1908490612a54565b90915550506001600160a01b0382166000908152606860205260408120805460019290611a1f908490612b17565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16611aeb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610783565b61104c612097565b600054610100900460ff16611b5e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610783565b610ea9828261210b565b60c9546001600160a01b0316331461104c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610783565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611c6a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610783565b6000818152606760205260409020546001600160a01b031615611ccf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610783565b611cdb60008383611fdf565b6001600160a01b0382166000908152606860205260408120805460019290611d04908490612b17565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415611dc45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610783565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611e3c8484846118c1565b611e488484848461219d565b610ae55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610783565b606060fb805461066490612990565b606081611eed5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f175780611f0181612a04565b9150611f109050600a83612a81565b9150611ef1565b60008167ffffffffffffffff811115611f3257611f3261268f565b6040519080825280601f01601f191660200182016040528015611f5c576020820181803683370190505b5090505b84156118b957611f71600183612a54565b9150611f7e600a86612a95565b611f89906030612b17565b60f81b818381518110611f9e57611f9e612a1f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611fd8600a86612a81565b9450611f60565b6001600160a01b03831661203a5761203581609980546000838152609a60205260408120829055600182018355919091527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000155565b61205d565b816001600160a01b0316836001600160a01b03161461205d5761205d8382612300565b6001600160a01b038216612074576108248161239d565b826001600160a01b0316826001600160a01b03161461082457610824828261244c565b600054610100900460ff166121025760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610783565b61104c33611bc2565b600054610100900460ff166121765760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610783565b8151612189906065906020850190612490565b508051610824906066906020840190612490565b60006001600160a01b0384163b156122f557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121e1903390899088908890600401612b2f565b602060405180830381600087803b1580156121fb57600080fd5b505af192505050801561222b575060408051601f3d908101601f1916820190925261222891810190612b6b565b60015b6122db573d808015612259576040519150601f19603f3d011682016040523d82523d6000602084013e61225e565b606091505b5080516122d35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610783565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506118b9565b506001949350505050565b6000600161230d84610fa0565b6123179190612a54565b60008381526098602052604090205490915080821461236a576001600160a01b03841660009081526097602090815260408083208584528252808320548484528184208190558352609890915290208190555b5060009182526098602090815260408084208490556001600160a01b039094168352609781528383209183525290812055565b6099546000906123af90600190612a54565b6000838152609a6020526040812054609980549394509092849081106123d7576123d7612a1f565b9060005260206000200154905080609983815481106123f8576123f8612a1f565b6000918252602080832090910192909255828152609a9091526040808220849055858252812055609980548061243057612430612b88565b6001900381819060005260206000200160009055905550505050565b600061245783610fa0565b6001600160a01b039093166000908152609760209081526040808320868452825280832085905593825260989052919091209190915550565b82805461249c90612990565b90600052602060002090601f0160209004810192826124be5760008555612504565b82601f106124d757805160ff1916838001178555612504565b82800160010185558215612504579182015b828111156125045782518255916020019190600101906124e9565b50612510929150612514565b5090565b5b808211156125105760008155600101612515565b6001600160e01b03198116811461162057600080fd5b60006020828403121561255157600080fd5b81356113a081612529565b60005b8381101561257757818101518382015260200161255f565b83811115610ae55750506000910152565b600081518084526125a081602086016020860161255c565b601f01601f19169290920160200192915050565b6020815260006113a06020830184612588565b6000602082840312156125d957600080fd5b5035919050565b80356001600160a01b03811681146125f757600080fd5b919050565b6000806040838503121561260f57600080fd5b612618836125e0565b946020939093013593505050565b803561ffff811681146125f757600080fd5b60006020828403121561264a57600080fd5b6113a082612626565b60008060006060848603121561266857600080fd5b612671846125e0565b925061267f602085016125e0565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156126c0576126c061268f565b604051601f8501601f19908116603f011681019082821181831017156126e8576126e861268f565b8160405280935085815286868601111561270157600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261272c57600080fd5b6113a0838335602085016126a5565b60008060006060848603121561275057600080fd5b833567ffffffffffffffff8082111561276857600080fd5b6127748783880161271b565b9450602086013591508082111561278a57600080fd5b506127978682870161271b565b9250506127a660408501612626565b90509250925092565b600080604083850312156127c257600080fd5b6127cb836125e0565b91506127d960208401612626565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561281a578351835292840192918401916001016127fe565b50909695505050505050565b60006020828403121561283857600080fd5b6113a0826125e0565b60006020828403121561285357600080fd5b813567ffffffffffffffff81111561286a57600080fd5b6118b98482850161271b565b6000806040838503121561288957600080fd5b6127cb83612626565b600080604083850312156128a557600080fd5b6128ae83612626565b91506127d9602084016125e0565b600080604083850312156128cf57600080fd5b6128d8836125e0565b9150602083013580151581146128ed57600080fd5b809150509250929050565b6000806000806080858703121561290e57600080fd5b612917856125e0565b9350612925602086016125e0565b925060408501359150606085013567ffffffffffffffff81111561294857600080fd5b8501601f8101871361295957600080fd5b612968878235602084016126a5565b91505092959194509250565b6000806040838503121561298757600080fd5b6128ae836125e0565b600181811c908216806129a457607f821691505b602082108114156129c557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600061ffff838116908316818110156129fc576129fc6129cb565b039392505050565b6000600019821415612a1857612a186129cb565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612a4f57612a4f6129cb565b500290565b600082821015612a6657612a666129cb565b500390565b634e487b7160e01b600052601260045260246000fd5b600082612a9057612a90612a6b565b500490565b600082612aa457612aa4612a6b565b500690565b600061ffff808316818516808303821115612ac657612ac66129cb565b01949350505050565b60008351612ae181846020880161255c565b835190830190612ac681836020880161255c565b600061ffff80831681811415612b0d57612b0d6129cb565b6001019392505050565b60008219821115612b2a57612b2a6129cb565b500190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612b616080830184612588565b9695505050505050565b600060208284031215612b7d57600080fd5b81516113a081612529565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type NervapeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NervapeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nervape__factory extends ContractFactory {
  constructor(...args: NervapeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nervape> {
    return super.deploy(overrides || {}) as Promise<Nervape>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Nervape {
    return super.attach(address) as Nervape;
  }
  override connect(signer: Signer): Nervape__factory {
    return super.connect(signer) as Nervape__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NervapeInterface {
    return new utils.Interface(_abi) as NervapeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Nervape {
    return new Contract(address, _abi, signerOrProvider) as Nervape;
  }
}
