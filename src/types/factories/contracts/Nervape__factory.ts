/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Nervape, NervapeInterface } from "../../contracts/Nervape";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "maxSupply",
        type: "uint16",
      },
    ],
    name: "addNewClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "bridgeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "classOf",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "currentClassId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "maxSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "tokensOfOwnerByClass",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "classId",
        type: "uint16",
      },
    ],
    name: "totalSupplyOfClass",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200262e3803806200262e833981016040819052620000349162000268565b8251839083906200004d906000906020850190620000f5565b50805162000063906001906020840190620000f5565b505050620000806200007a6200009f60201b60201c565b620000a3565b80516200009590600b906020840190620000f5565b5050505062000336565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010390620002f9565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001c357600080fd5b81516001600160401b0380821115620001e057620001e06200019b565b604051601f8301601f19908116603f011681019082821181831017156200020b576200020b6200019b565b816040528381526020925086838588010111156200022857600080fd5b600091505b838210156200024c57858201830151818301840152908201906200022d565b838211156200025e5760008385830101525b9695505050505050565b6000806000606084860312156200027e57600080fd5b83516001600160401b03808211156200029657600080fd5b620002a487838801620001b1565b94506020860151915080821115620002bb57600080fd5b620002c987838801620001b1565b93506040860151915080821115620002e057600080fd5b50620002ef86828701620001b1565b9150509250925092565b600181811c908216806200030e57607f821691505b602082108114156200033057634e487b7160e01b600052602260045260246000fd5b50919050565b6122e880620003466000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063715018a61161012a578063afcafc0e116100bd578063e78cea921161008c578063f2fde38b11610071578063f2fde38b146104b6578063fca3b5aa146104c9578063fdbf5d63146104dc57600080fd5b8063e78cea9214610467578063e985e9c51461047a57600080fd5b8063afcafc0e14610419578063b7a833a91461042c578063b88d4fde14610441578063c87b56dd1461045457600080fd5b806395d89b41116100f957806395d89b41146103c45780639c205513146103cc578063a22cb465146103df578063ada90a7f146103f257600080fd5b8063715018a6146103855780638c2a993e1461038d5780638da5cb5b146103a05780638dd14802146103b157600080fd5b80632f745c59116101a257806355f804b31161017157806355f804b3146103445780636352211e146103575780636c0360eb1461036a57806370a082311461037257600080fd5b80632f745c59146102e557806342842e0e146102f85780634324aa211461030b5780634f6ccce71461033157600080fd5b8063095ea7b3116101de578063095ea7b31461028b57806318160ddd146102a057806323b872dd146102b25780632f00f913146102c557600080fd5b806301ffc9a71461021057806306fdde0314610238578063075461721461024d578063081812fc14610278575b600080fd5b61022361021e366004611d52565b610503565b60405190151581526020015b60405180910390f35b61024061052e565b60405161022f9190611dc7565b600c54610260906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b610260610286366004611dda565b6105c0565b61029e610299366004611e0f565b6105e7565b005b6008545b60405190815260200161022f565b61029e6102c0366004611e39565b610702565b6102d86102d3366004611e87565b61077a565b60405161022f9190611eba565b6102a46102f3366004611e0f565b61084b565b61029e610306366004611e39565b6108f3565b61031e610319366004611dda565b61090e565b60405161ffff909116815260200161022f565b6102a461033f366004611dda565b61091c565b61029e610352366004611f8a565b6109c0565b610260610365366004611dda565b6109df565b610240610a44565b6102a4610380366004611fd3565b610ad2565b61029e610b6c565b61029e61039b366004611e0f565b610b80565b600a546001600160a01b0316610260565b61029e6103bf366004611fd3565b610ca6565b610240610cd0565b61029e6103da366004611fee565b610cdf565b61029e6103ed366004612018565b610e32565b61031e610400366004612054565b61ffff9081166000908152600e60205260409020541690565b61029e610427366004612054565b610e3d565b600d5461031e90600160a01b900461ffff1681565b61029e61044f36600461206f565b610f05565b610240610462366004611dda565b610f7e565b600d54610260906001600160a01b031681565b6102236104883660046120eb565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61029e6104c4366004611fd3565b610fe5565b61029e6104d7366004611fd3565b611075565b61031e6104ea366004612054565b61ffff9081166000908152600f60205260409020541690565b60006001600160e01b0319821663780e9d6360e01b148061052857506105288261109f565b92915050565b60606000805461053d90612107565b80601f016020809104026020016040519081016040528092919081815260200182805461056990612107565b80156105b65780601f1061058b576101008083540402835291602001916105b6565b820191906000526020600020905b81548152906001019060200180831161059957829003601f168201915b5050505050905090565b60006105cb826110ef565b506000908152600460205260409020546001600160a01b031690565b60006105f2826109df565b9050806001600160a01b0316836001600160a01b031614156106655760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061068157506106818133610488565b6106f35760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161065c565b6106fd8383611153565b505050565b61070c33826111c1565b61076f5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161065c565b6106fd838383611240565b6060600061078784610ad2565b905060008167ffffffffffffffff8111156107a4576107a4611efe565b6040519080825280602002602001820160405280156107cd578160200160208202803683370190505b5090506000805b838110156108405760006107e8888361084b565b90506107f38161090e565b61ffff168761ffff16141561082d5780848461080e81612158565b95508151811061082057610820612173565b6020026020010181815250505b508061083881612158565b9150506107d4565b508152949350505050565b600061085683610ad2565b82106108ca5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161065c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106fd83838360405180602001604052806000815250610f05565b60006105286127108361219f565b600061092760085490565b821061099b5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161065c565b600882815481106109ae576109ae612173565b90600052602060002001549050919050565b6109c86113ff565b80516109db90600b906020840190611ca3565b5050565b6000818152600260205260408120546001600160a01b0316806105285760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161065c565b600b8054610a5190612107565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d90612107565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b505050505081565b60006001600160a01b038216610b505760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161065c565b506001600160a01b031660009081526003602052604090205490565b610b746113ff565b610b7e6000611459565b565b600d546001600160a01b03163314610bda5760405162461bcd60e51b815260206004820152600a60248201527f4e6f742062726964676500000000000000000000000000000000000000000000604482015260640161065c565b6000610be58261090e565b61ffff8181166000908152600e6020908152604080832054600f909252909120549293508116911610610c5a5760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c7900000000000000000000000000604482015260640161065c565b61ffff8082166000908152600f602052604081208054600193919291610c82918591166121b3565b92506101000a81548161ffff021916908361ffff1602179055506106fd83836114ab565b610cae6113ff565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001805461053d90612107565b600c546001600160a01b03163314610d395760405162461bcd60e51b815260206004820152600a60248201527f4e6f74206d696e74657200000000000000000000000000000000000000000000604482015260640161065c565b61ffff8281166000908152600e6020908152604080832054600f90925290912054908216911610610dac5760405162461bcd60e51b815260206004820152601360248201527f4578636565646564206d617820737570706c7900000000000000000000000000604482015260640161065c565b61ffff8281166000908152600f60205260408120549091169081610dd2856127106121d9565b610ddc91906121b3565b61ffff8581166000908152600f60205260408120805493831694506001939092610e08918591166121b3565b92506101000a81548161ffff021916908361ffff160217905550610e2c83826114ab565b50505050565b6109db3383836114c5565b610e456113ff565b6001600d60148282829054906101000a900461ffff16610e6591906121b3565b92506101000a81548161ffff021916908361ffff1602179055506127108161ffff161115610ed55760405162461bcd60e51b815260206004820152601860248201527f4d617820737570706c7920657863656564732031303030300000000000000000604482015260640161065c565b600d5461ffff600160a01b90910481166000908152600e6020526040902080549190921661ffff19909116179055565b610f0f33836111c1565b610f725760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161065c565b610e2c84848484611594565b6060610f89826110ef565b6000610f93611612565b90506000815111610fb35760405180602001604052806000815250610fde565b80610fbd84611621565b604051602001610fce929190612203565b6040516020818303038152906040525b9392505050565b610fed6113ff565b6001600160a01b0381166110695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161065c565b61107281611459565b50565b61107d6113ff565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b14806110d057506001600160e01b03198216635b5e139f60e01b145b8061052857506301ffc9a760e01b6001600160e01b0319831614610528565b6000818152600260205260409020546001600160a01b03166110725760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161065c565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611188826109df565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806111cd836109df565b9050806001600160a01b0316846001600160a01b0316148061121457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806112385750836001600160a01b031661122d846105c0565b6001600160a01b0316145b949350505050565b826001600160a01b0316611253826109df565b6001600160a01b0316146112cf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161065c565b6001600160a01b0382166113315760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161065c565b61133c838383611737565b611347600082611153565b6001600160a01b0383166000908152600360205260408120805460019290611370908490612229565b90915550506001600160a01b038216600090815260036020526040812080546001929061139e908490612240565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610b7e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065c565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109db8282604051806020016040528060008152506117ef565b816001600160a01b0316836001600160a01b031614156115275760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161065c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61159f848484611240565b6115ab8484848461186d565b610e2c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b6060600b805461053d90612107565b6060816116455750506040805180820190915260018152600360fc1b602082015290565b8160005b811561166f578061165981612158565b91506116689050600a8361219f565b9150611649565b60008167ffffffffffffffff81111561168a5761168a611efe565b6040519080825280601f01601f1916602001820160405280156116b4576020820181803683370190505b5090505b8415611238576116c9600183612229565b91506116d6600a86612258565b6116e1906030612240565b60f81b8183815181106116f6576116f6612173565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611730600a8661219f565b94506116b8565b6001600160a01b0383166117925761178d81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6117b5565b816001600160a01b0316836001600160a01b0316146117b5576117b583826119c5565b6001600160a01b0382166117cc576106fd81611a62565b826001600160a01b0316826001600160a01b0316146106fd576106fd8282611b11565b6117f98383611b55565b611806600084848461186d565b6106fd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b60006001600160a01b0384163b156119ba57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118b190339089908890889060040161226c565b602060405180830381600087803b1580156118cb57600080fd5b505af19250505080156118fb575060408051601f3d908101601f191682019092526118f8918101906122a8565b60015b6119a0573d808015611929576040519150601f19603f3d011682016040523d82523d6000602084013e61192e565b606091505b5080516119985760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161065c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611238565b506001949350505050565b600060016119d284610ad2565b6119dc9190612229565b600083815260076020526040902054909150808214611a2f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a7490600190612229565b60008381526009602052604081205460088054939450909284908110611a9c57611a9c612173565b906000526020600020015490508060088381548110611abd57611abd612173565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611af557611af56122c5565b6001900381819060005260206000200160009055905550505050565b6000611b1c83610ad2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611bab5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161065c565b6000818152600260205260409020546001600160a01b031615611c105760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161065c565b611c1c60008383611737565b6001600160a01b0382166000908152600360205260408120805460019290611c45908490612240565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611caf90612107565b90600052602060002090601f016020900481019282611cd15760008555611d17565b82601f10611cea57805160ff1916838001178555611d17565b82800160010185558215611d17579182015b82811115611d17578251825591602001919060010190611cfc565b50611d23929150611d27565b5090565b5b80821115611d235760008155600101611d28565b6001600160e01b03198116811461107257600080fd5b600060208284031215611d6457600080fd5b8135610fde81611d3c565b60005b83811015611d8a578181015183820152602001611d72565b83811115610e2c5750506000910152565b60008151808452611db3816020860160208601611d6f565b601f01601f19169290920160200192915050565b602081526000610fde6020830184611d9b565b600060208284031215611dec57600080fd5b5035919050565b80356001600160a01b0381168114611e0a57600080fd5b919050565b60008060408385031215611e2257600080fd5b611e2b83611df3565b946020939093013593505050565b600080600060608486031215611e4e57600080fd5b611e5784611df3565b9250611e6560208501611df3565b9150604084013590509250925092565b803561ffff81168114611e0a57600080fd5b60008060408385031215611e9a57600080fd5b611ea383611df3565b9150611eb160208401611e75565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611ef257835183529284019291840191600101611ed6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611f2f57611f2f611efe565b604051601f8501601f19908116603f01168101908282118183101715611f5757611f57611efe565b81604052809350858152868686011115611f7057600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f9c57600080fd5b813567ffffffffffffffff811115611fb357600080fd5b8201601f81018413611fc457600080fd5b61123884823560208401611f14565b600060208284031215611fe557600080fd5b610fde82611df3565b6000806040838503121561200157600080fd5b61200a83611e75565b9150611eb160208401611df3565b6000806040838503121561202b57600080fd5b61203483611df3565b91506020830135801515811461204957600080fd5b809150509250929050565b60006020828403121561206657600080fd5b610fde82611e75565b6000806000806080858703121561208557600080fd5b61208e85611df3565b935061209c60208601611df3565b925060408501359150606085013567ffffffffffffffff8111156120bf57600080fd5b8501601f810187136120d057600080fd5b6120df87823560208401611f14565b91505092959194509250565b600080604083850312156120fe57600080fd5b61200a83611df3565b600181811c9082168061211b57607f821691505b6020821081141561213c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561216c5761216c612142565b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826121ae576121ae612189565b500490565b600061ffff8083168185168083038211156121d0576121d0612142565b01949350505050565b600061ffff808316818516818304811182151516156121fa576121fa612142565b02949350505050565b60008351612215818460208801611d6f565b8351908301906121d0818360208801611d6f565b60008282101561223b5761223b612142565b500390565b6000821982111561225357612253612142565b500190565b60008261226757612267612189565b500690565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261229e6080830184611d9b565b9695505050505050565b6000602082840312156122ba57600080fd5b8151610fde81611d3c565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type NervapeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NervapeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nervape__factory extends ContractFactory {
  constructor(...args: NervapeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nervape> {
    return super.deploy(
      name_,
      symbol_,
      uri_,
      overrides || {}
    ) as Promise<Nervape>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, uri_, overrides || {});
  }
  override attach(address: string): Nervape {
    return super.attach(address) as Nervape;
  }
  override connect(signer: Signer): Nervape__factory {
    return super.connect(signer) as Nervape__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NervapeInterface {
    return new utils.Interface(_abi) as NervapeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Nervape {
    return new Contract(address, _abi, signerOrProvider) as Nervape;
  }
}
