/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Nervape, NervapeInterface } from "../../contracts/Nervape";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405268056bc75e2d63100000600b553480156200001e57600080fd5b5060408051808201825260078152664e65727661706560c81b6020808301918252835180850190945260048452634e41504560e01b9084015281519192916200006a91600091620000f9565b50805162000080906001906020840190620000f9565b5050506200009d62000097620000a360201b60201c565b620000a7565b620001dc565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000107906200019f565b90600052602060002090601f0160209004810192826200012b576000855562000176565b82601f106200014657805160ff191683800117855562000176565b8280016001018555821562000176579182015b828111156200017657825182559160200191906001019062000159565b506200018492915062000188565b5090565b5b8082111562000184576000815560010162000189565b600181811c90821680620001b457607f821691505b60208210811415620001d657634e487b7160e01b600052602260045260246000fd5b50919050565b611cf880620001ec6000396000f3fe6080604052600436106101755760003560e01c806370a08231116100cb578063a0712d681161007f578063c87b56dd11610059578063c87b56dd146103db578063e985e9c5146103fb578063f2fde38b1461044457600080fd5b8063a0712d6814610388578063a22cb4651461039b578063b88d4fde146103bb57600080fd5b80638da5cb5b116100b05780638da5cb5b1461033f57806395d89b411461035d578063a035b1fe1461037257600080fd5b806370a082311461030a578063715018a61461032a57600080fd5b806323b872dd1161012d5780634f6ccce7116101075780634f6ccce7146102aa57806355f804b3146102ca5780636352211e146102ea57600080fd5b806323b872dd1461024a5780632f745c591461026a57806342842e0e1461028a57600080fd5b8063081812fc1161015e578063081812fc146101d1578063095ea7b31461020957806318160ddd1461022b57600080fd5b806301ffc9a71461017a57806306fdde03146101af575b600080fd5b34801561018657600080fd5b5061019a610195366004611841565b610464565b60405190151581526020015b60405180910390f35b3480156101bb57600080fd5b506101c461048f565b6040516101a691906118b6565b3480156101dd57600080fd5b506101f16101ec3660046118c9565b610521565b6040516001600160a01b0390911681526020016101a6565b34801561021557600080fd5b506102296102243660046118fe565b610548565b005b34801561023757600080fd5b506008545b6040519081526020016101a6565b34801561025657600080fd5b50610229610265366004611928565b610663565b34801561027657600080fd5b5061023c6102853660046118fe565b6106db565b34801561029657600080fd5b506102296102a5366004611928565b610783565b3480156102b657600080fd5b5061023c6102c53660046118c9565b61079e565b3480156102d657600080fd5b506102296102e53660046119f0565b610842565b3480156102f657600080fd5b506101f16103053660046118c9565b610861565b34801561031657600080fd5b5061023c610325366004611a39565b6108c6565b34801561033657600080fd5b50610229610960565b34801561034b57600080fd5b50600a546001600160a01b03166101f1565b34801561036957600080fd5b506101c4610974565b34801561037e57600080fd5b5061023c600b5481565b6102296103963660046118c9565b610983565b3480156103a757600080fd5b506102296103b6366004611a54565b610a0d565b3480156103c757600080fd5b506102296103d6366004611a90565b610a18565b3480156103e757600080fd5b506101c46103f63660046118c9565b610a97565b34801561040757600080fd5b5061019a610416366004611b0c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561045057600080fd5b5061022961045f366004611a39565b610afe565b60006001600160e01b0319821663780e9d6360e01b1480610489575061048982610b8e565b92915050565b60606000805461049e90611b3f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ca90611b3f565b80156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b5050505050905090565b600061052c82610bde565b506000908152600460205260409020546001600160a01b031690565b600061055382610861565b9050806001600160a01b0316836001600160a01b031614156105c65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105e257506105e28133610416565b6106545760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016105bd565b61065e8383610c42565b505050565b61066d3382610cb0565b6106d05760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016105bd565b61065e838383610d2f565b60006106e6836108c6565b821061075a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e647300000000000000000000000000000000000000000060648201526084016105bd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61065e83838360405180602001604052806000815250610a18565b60006107a960085490565b821061081d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084016105bd565b6008828154811061083057610830611b7a565b90600052602060002001549050919050565b61084a610eee565b805161085d90600c906020840190611792565b5050565b6000818152600260205260408120546001600160a01b0316806104895760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016105bd565b60006001600160a01b0382166109445760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016105bd565b506001600160a01b031660009081526003602052604090205490565b610968610eee565b6109726000610f48565b565b60606001805461049e90611b3f565b600b546109909082611ba6565b34146109de5760405162461bcd60e51b815260206004820152600b60248201527f57726f6e672076616c756500000000000000000000000000000000000000000060448201526064016105bd565b60005b8181101561085d576109fb336109f660085490565b610f9a565b80610a0581611bc5565b9150506109e1565b61085d338383610fb4565b610a223383610cb0565b610a855760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b60648201526084016105bd565b610a9184848484611083565b50505050565b6060610aa282610bde565b6000610aac611101565b90506000815111610acc5760405180602001604052806000815250610af7565b80610ad684611110565b604051602001610ae7929190611be0565b6040516020818303038152906040525b9392505050565b610b06610eee565b6001600160a01b038116610b825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105bd565b610b8b81610f48565b50565b60006001600160e01b031982166380ac58cd60e01b1480610bbf57506001600160e01b03198216635b5e139f60e01b145b8061048957506301ffc9a760e01b6001600160e01b0319831614610489565b6000818152600260205260409020546001600160a01b0316610b8b5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016105bd565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c7782610861565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cbc83610861565b9050806001600160a01b0316846001600160a01b03161480610d0357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d275750836001600160a01b0316610d1c84610521565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4282610861565b6001600160a01b031614610dbe5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016105bd565b6001600160a01b038216610e205760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105bd565b610e2b838383611226565b610e36600082610c42565b6001600160a01b0383166000908152600360205260408120805460019290610e5f908490611c0f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e8d908490611c26565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b031633146109725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105bd565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61085d8282604051806020016040528060008152506112de565b816001600160a01b0316836001600160a01b031614156110165760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105bd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61108e848484610d2f565b61109a8484848461135c565b610a915760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105bd565b6060600c805461049e90611b3f565b6060816111345750506040805180820190915260018152600360fc1b602082015290565b8160005b811561115e578061114881611bc5565b91506111579050600a83611c54565b9150611138565b60008167ffffffffffffffff81111561117957611179611964565b6040519080825280601f01601f1916602001820160405280156111a3576020820181803683370190505b5090505b8415610d27576111b8600183611c0f565b91506111c5600a86611c68565b6111d0906030611c26565b60f81b8183815181106111e5576111e5611b7a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061121f600a86611c54565b94506111a7565b6001600160a01b0383166112815761127c81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6112a4565b816001600160a01b0316836001600160a01b0316146112a4576112a483826114b4565b6001600160a01b0382166112bb5761065e81611551565b826001600160a01b0316826001600160a01b03161461065e5761065e8282611600565b6112e88383611644565b6112f5600084848461135c565b61065e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105bd565b60006001600160a01b0384163b156114a957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113a0903390899088908890600401611c7c565b602060405180830381600087803b1580156113ba57600080fd5b505af19250505080156113ea575060408051601f3d908101601f191682019092526113e791810190611cb8565b60015b61148f573d808015611418576040519150601f19603f3d011682016040523d82523d6000602084013e61141d565b606091505b5080516114875760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105bd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d27565b506001949350505050565b600060016114c1846108c6565b6114cb9190611c0f565b60008381526007602052604090205490915080821461151e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061156390600190611c0f565b6000838152600960205260408120546008805493945090928490811061158b5761158b611b7a565b9060005260206000200154905080600883815481106115ac576115ac611b7a565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806115e4576115e4611cd5565b6001900381819060005260206000200160009055905550505050565b600061160b836108c6565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b03821661169a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105bd565b6000818152600260205260409020546001600160a01b0316156116ff5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105bd565b61170b60008383611226565b6001600160a01b0382166000908152600360205260408120805460019290611734908490611c26565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461179e90611b3f565b90600052602060002090601f0160209004810192826117c05760008555611806565b82601f106117d957805160ff1916838001178555611806565b82800160010185558215611806579182015b828111156118065782518255916020019190600101906117eb565b50611812929150611816565b5090565b5b808211156118125760008155600101611817565b6001600160e01b031981168114610b8b57600080fd5b60006020828403121561185357600080fd5b8135610af78161182b565b60005b83811015611879578181015183820152602001611861565b83811115610a915750506000910152565b600081518084526118a281602086016020860161185e565b601f01601f19169290920160200192915050565b602081526000610af7602083018461188a565b6000602082840312156118db57600080fd5b5035919050565b80356001600160a01b03811681146118f957600080fd5b919050565b6000806040838503121561191157600080fd5b61191a836118e2565b946020939093013593505050565b60008060006060848603121561193d57600080fd5b611946846118e2565b9250611954602085016118e2565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561199557611995611964565b604051601f8501601f19908116603f011681019082821181831017156119bd576119bd611964565b816040528093508581528686860111156119d657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611a0257600080fd5b813567ffffffffffffffff811115611a1957600080fd5b8201601f81018413611a2a57600080fd5b610d278482356020840161197a565b600060208284031215611a4b57600080fd5b610af7826118e2565b60008060408385031215611a6757600080fd5b611a70836118e2565b915060208301358015158114611a8557600080fd5b809150509250929050565b60008060008060808587031215611aa657600080fd5b611aaf856118e2565b9350611abd602086016118e2565b925060408501359150606085013567ffffffffffffffff811115611ae057600080fd5b8501601f81018713611af157600080fd5b611b008782356020840161197a565b91505092959194509250565b60008060408385031215611b1f57600080fd5b611b28836118e2565b9150611b36602084016118e2565b90509250929050565b600181811c90821680611b5357607f821691505b60208210811415611b7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611bc057611bc0611b90565b500290565b6000600019821415611bd957611bd9611b90565b5060010190565b60008351611bf281846020880161185e565b835190830190611c0681836020880161185e565b01949350505050565b600082821015611c2157611c21611b90565b500390565b60008219821115611c3957611c39611b90565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611c6357611c63611c3e565b500490565b600082611c7757611c77611c3e565b500690565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611cae608083018461188a565b9695505050505050565b600060208284031215611cca57600080fd5b8151610af78161182b565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type NervapeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NervapeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nervape__factory extends ContractFactory {
  constructor(...args: NervapeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nervape> {
    return super.deploy(overrides || {}) as Promise<Nervape>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Nervape {
    return super.attach(address) as Nervape;
  }
  override connect(signer: Signer): Nervape__factory {
    return super.connect(signer) as Nervape__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NervapeInterface {
    return new utils.Interface(_abi) as NervapeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Nervape {
    return new Contract(address, _abi, signerOrProvider) as Nervape;
  }
}
