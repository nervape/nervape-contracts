/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  CampaignMinter,
  CampaignMinterInterface,
} from "../../contracts/CampaignMinter";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "scene",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPerWallet",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scene",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "relatedApes",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPerWallet",
        type: "uint256",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient_",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCampaign",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5060405161126d38038061126d833981016040819052610034916100b2565b61003d33610062565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c457600080fd5b81516001600160a01b03811681146100db57600080fd5b9392505050565b61117c806100f16000396000f3fe6080604052600436106100c75760003560e01c8063715018a611610074578063df144d471161004e578063df144d47146102ab578063e42e290d146102cb578063f2fde38b146102e157600080fd5b8063715018a6146102585780638da5cb5b1461026d578063b1b666521461028b57600080fd5b80633bbed4a0116100a55780633bbed4a0146101ba57806366d003ac146101da5780636887a0e51461021257600080fd5b8063141961bc146100cc5780631b2ef1ca1461015a5780631c4427541461016f575b600080fd5b3480156100d857600080fd5b506101236100e7366004610ef4565b6003602081905260009182526040909120600181015460028201549282015460048301546005909301546001600160a01b039092169392909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b61016d610168366004610f0d565b610301565b005b34801561017b57600080fd5b506101aa61018a366004610f44565b600460209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610151565b3480156101c657600080fd5b5061016d6101d5366004610f70565b610723565b3480156101e657600080fd5b506001546101fa906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b34801561021e57600080fd5b5061024a61022d366004610f94565b600560209081526000928352604080842090915290825290205481565b604051908152602001610151565b34801561026457600080fd5b5061016d6107a3565b34801561027957600080fd5b506000546001600160a01b03166101fa565b34801561029757600080fd5b5061016d6102a6366004611010565b6107b7565b3480156102b757600080fd5b5061016d6102c636600461105c565b610bd6565b3480156102d757600080fd5b5061024a60025481565b3480156102ed57600080fd5b5061016d6102fc366004610f70565b610d42565b3332146103405760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b60448201526064015b60405180910390fd5b60008281526003602090815260408083208151815460e09481028201850190935260c081018381529093919284928491908401828280156103aa57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161038c575b505050918352505060018201546001600160a01b0316602082015260028201546040820152600382015460608201526004820154608082015260059091015460a0909101529050821580159061040257506002548311155b61044e5760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642063616d706169676e206964000000000000000000000000006044820152606401610337565b60008211801561045f575060028211155b6104ab5760405162461bcd60e51b815260206004820152601160248201527f57726f6e67206d696e7420616d6f756e740000000000000000000000000000006044820152606401610337565b60a081015160008481526005602090815260408083203384529091529020546104d59084906110ea565b11156105235760405162461bcd60e51b815260206004820152601860248201527f4578636565646564206d6178206d696e7420616d6f756e7400000000000000006044820152606401610337565b80606001514210156105775760405162461bcd60e51b815260206004820152601560248201527f43616d706169676e206973206e6f7420737461727400000000000000000000006044820152606401610337565b806080015142106105ca5760405162461bcd60e51b815260206004820152601260248201527f43616d706169676e2068617320656e64656400000000000000000000000000006044820152606401610337565b60408101516105d99083611102565b34146106275760405162461bcd60e51b815260206004820152601360248201527f57726f6e67207061796d656e742076616c7565000000000000000000000000006044820152606401610337565b6000838152600560209081526040808320338452909152812080548492906106509084906110ea565b909155505060015460408201516001600160a01b03909116906108fc906106779085611102565b6040518115909202916000818181858888f1935050505015801561069f573d6000803e3d6000fd5b5060005b8281101561071d5760208201516040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b50505050808061071590611121565b9150506106a3565b50505050565b61072b610dd2565b6001600160a01b0381166107815760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206164647265737300000000000000000000000000000000006044820152606401610337565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6107ab610dd2565b6107b56000610e2c565b565b3332146107f15760405162461bcd60e51b81526020600482015260086024820152674f6e6c7920454f4160c01b6044820152606401610337565b60008381526003602090815260408083208151815460e09481028201850190935260c0810183815290939192849284919084018282801561085b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161083d575b505050918352505060018201546001600160a01b0316602082015260028201546040820152600382015460608201526004820154608082015260059091015460a09091015280515190915082146108f45760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420746f6b656e496473000000000000000000000000000000006044820152606401610337565b428160800151116109475760405162461bcd60e51b815260206004820152601260248201527f43616d706169676e2068617320656e64656400000000000000000000000000006044820152606401610337565b60005b82811015610b705760008260000151828151811061096a5761096a61113c565b6020026020010151905060046000826001600160a01b03166001600160a01b0316815260200190815260200160002060008686858181106109ad576109ad61113c565b602090810292909201358352508101919091526040016000205460ff16610a165760405162461bcd60e51b815260206004820152601460248201527f416c7265616479207061727469636970617465640000000000000000000000006044820152606401610337565b336001600160a01b038216636352211e878786818110610a3857610a3861113c565b905060200201356040518263ffffffff1660e01b8152600401610a5d91815260200190565b60206040518083038186803b158015610a7557600080fd5b505afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190611152565b6001600160a01b031614610b035760405162461bcd60e51b815260206004820152600960248201527f4e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610337565b6001600160a01b0381166000908152600460205260408120600191878786818110610b3057610b3061113c565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550508080610b6890611121565b91505061094a565b5060208101516040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b5050505050505050565b610bde610dd2565b6001600160a01b038716610c345760405162461bcd60e51b815260206004820152600d60248201527f496e76616c6964207363656e65000000000000000000000000000000000000006044820152606401610337565b84610c815760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642072656c6174656420617065730000000000000000000000006044820152606401610337565b818310610cd05760405162461bcd60e51b815260206004820152601060248201527f496e76616c696420656e642074696d65000000000000000000000000000000006044820152606401610337565b600160026000828254610ce391906110ea565b909155505060025460009081526003602052604090206001810180546001600160a01b0319166001600160a01b038a16179055610d21818888610e7c565b50600281019490945560038401929092556004830155600590910155505050565b610d4a610dd2565b6001600160a01b038116610dc65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610337565b610dcf81610e2c565b50565b6000546001600160a01b031633146107b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610337565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610ecf579160200282015b82811115610ecf5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610e9c565b50610edb929150610edf565b5090565b5b80821115610edb5760008155600101610ee0565b600060208284031215610f0657600080fd5b5035919050565b60008060408385031215610f2057600080fd5b50508035926020909101359150565b6001600160a01b0381168114610dcf57600080fd5b60008060408385031215610f5757600080fd5b8235610f6281610f2f565b946020939093013593505050565b600060208284031215610f8257600080fd5b8135610f8d81610f2f565b9392505050565b60008060408385031215610fa757600080fd5b823591506020830135610fb981610f2f565b809150509250929050565b60008083601f840112610fd657600080fd5b50813567ffffffffffffffff811115610fee57600080fd5b6020830191508360208260051b850101111561100957600080fd5b9250929050565b60008060006040848603121561102557600080fd5b83359250602084013567ffffffffffffffff81111561104357600080fd5b61104f86828701610fc4565b9497909650939450505050565b600080600080600080600060c0888a03121561107757600080fd5b873561108281610f2f565b9650602088013567ffffffffffffffff81111561109e57600080fd5b6110aa8a828b01610fc4565b989b909a509798604081013598606082013598506080820135975060a09091013595509350505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110fd576110fd6110d4565b500190565b600081600019048311821515161561111c5761111c6110d4565b500290565b6000600019821415611135576111356110d4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561116457600080fd5b8151610f8d81610f2f56fea164736f6c6343000809000a";

type CampaignMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignMinter__factory extends ContractFactory {
  constructor(...args: CampaignMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    recipient_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CampaignMinter> {
    return super.deploy(recipient_, overrides || {}) as Promise<CampaignMinter>;
  }
  override getDeployTransaction(
    recipient_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(recipient_, overrides || {});
  }
  override attach(address: string): CampaignMinter {
    return super.attach(address) as CampaignMinter;
  }
  override connect(signer: Signer): CampaignMinter__factory {
    return super.connect(signer) as CampaignMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignMinterInterface {
    return new utils.Interface(_abi) as CampaignMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignMinter {
    return new Contract(address, _abi, signerOrProvider) as CampaignMinter;
  }
}
