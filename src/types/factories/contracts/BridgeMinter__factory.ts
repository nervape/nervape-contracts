/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  BridgeMinter,
  BridgeMinterInterface,
} from "../../contracts/BridgeMinter";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "character_",
        type: "address",
      },
      {
        internalType: "address",
        name: "scene_",
        type: "address",
      },
      {
        internalType: "address",
        name: "item_",
        type: "address",
      },
      {
        internalType: "address",
        name: "special_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "character",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "item",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "characterIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "sceneIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "itemIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "specialIds",
        type: "uint256[]",
      },
    ],
    name: "mintMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scene",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "character_",
        type: "address",
      },
    ],
    name: "setCharacter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "item_",
        type: "address",
      },
    ],
    name: "setItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scene_",
        type: "address",
      },
    ],
    name: "setScene",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "special_",
        type: "address",
      },
    ],
    name: "setSepcial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "special",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ab0380380610ab083398101604081905261002f916100f7565b6100383361008b565b600180546001600160a01b039586166001600160a01b031991821617909155600280549486169482169490941790935560038054928516928416929092179091556004805491909316911617905561014b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f257600080fd5b919050565b6000806000806080858703121561010d57600080fd5b610116856100db565b9350610124602086016100db565b9250610132604086016100db565b9150610140606086016100db565b905092959194509250565b6109568061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063ce9a3b0f11610066578063ce9a3b0f146101be578063eac2cb13146101d1578063f2a4a82e146101e4578063f2fde38b146101f757600080fd5b80638da5cb5b14610187578063a52e182a14610198578063b3ab15fb146101ab57600080fd5b80634d2e03a0116100c85780634d2e03a014610146578063570ca73514610159578063670bae101461016c578063715018a61461017f57600080fd5b8063165ed276146100ef578063204efe17146101045780634c447aea14610117575b600080fd5b6101026100fd3660046107c5565b61020a565b005b6101026101123660046107c5565b610234565b60025461012a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60015461012a906001600160a01b031681565b60055461012a906001600160a01b031681565b61010261017a366004610833565b61025e565b6101026105dd565b6000546001600160a01b031661012a565b6101026101a63660046107c5565b6105f1565b6101026101b93660046107c5565b61061b565b60045461012a906001600160a01b031681565b6101026101df3660046107c5565b610645565b60035461012a906001600160a01b031681565b6101026102053660046107c5565b61066f565b6102126106ff565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61023c6106ff565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146102bd5760405162461bcd60e51b815260206004820152600c60248201527f4e6f74206f70657261746f72000000000000000000000000000000000000000060448201526064015b60405180910390fd5b861515806102ca57508415155b806102d457508215155b806102de57508015155b61032a5760405162461bcd60e51b815260206004820152601160248201527f4e6f206272696467696e6720746f6b656e00000000000000000000000000000060448201526064016102b4565b60005b878110156103d3576001546001600160a01b0316638c2a993e8b8b8b858181106103595761035961090a565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b5050505080806103cb90610920565b91505061032d565b5060005b8581101561047d576002546001600160a01b0316638c2a993e8b8989858181106104035761040361090a565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b50505050808061047590610920565b9150506103d7565b5060005b83811015610527576003546001600160a01b0316638c2a993e8b8787858181106104ad576104ad61090a565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401600060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b50505050808061051f90610920565b915050610481565b5060005b818110156105d1576004546001600160a01b0316638c2a993e8b8585858181106105575761055761090a565b6040516001600160e01b031960e087901b1681526001600160a01b0390941660048501526020029190910135602483015250604401600060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b5050505080806105c990610920565b91505061052b565b50505050505050505050565b6105e56106ff565b6105ef6000610759565b565b6105f96106ff565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6106236106ff565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b61064d6106ff565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6106776106ff565b6001600160a01b0381166106f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b4565b6106fc81610759565b50565b6000546001600160a01b031633146105ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107c057600080fd5b919050565b6000602082840312156107d757600080fd5b6107e0826107a9565b9392505050565b60008083601f8401126107f957600080fd5b50813567ffffffffffffffff81111561081157600080fd5b6020830191508360208260051b850101111561082c57600080fd5b9250929050565b600080600080600080600080600060a08a8c03121561085157600080fd5b61085a8a6107a9565b985060208a013567ffffffffffffffff8082111561087757600080fd5b6108838d838e016107e7565b909a50985060408c013591508082111561089c57600080fd5b6108a88d838e016107e7565b909850965060608c01359150808211156108c157600080fd5b6108cd8d838e016107e7565b909650945060808c01359150808211156108e657600080fd5b506108f38c828d016107e7565b915080935050809150509295985092959850929598565b634e487b7160e01b600052603260045260246000fd5b600060001982141561094257634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type BridgeMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeMinter__factory extends ContractFactory {
  constructor(...args: BridgeMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    character_: PromiseOrValue<string>,
    scene_: PromiseOrValue<string>,
    item_: PromiseOrValue<string>,
    special_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeMinter> {
    return super.deploy(
      character_,
      scene_,
      item_,
      special_,
      overrides || {}
    ) as Promise<BridgeMinter>;
  }
  override getDeployTransaction(
    character_: PromiseOrValue<string>,
    scene_: PromiseOrValue<string>,
    item_: PromiseOrValue<string>,
    special_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      character_,
      scene_,
      item_,
      special_,
      overrides || {}
    );
  }
  override attach(address: string): BridgeMinter {
    return super.attach(address) as BridgeMinter;
  }
  override connect(signer: Signer): BridgeMinter__factory {
    return super.connect(signer) as BridgeMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeMinterInterface {
    return new utils.Interface(_abi) as BridgeMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeMinter {
    return new Contract(address, _abi, signerOrProvider) as BridgeMinter;
  }
}
