/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { IApe, IApeInterface } from "../../../contracts/Minter.sol/IApe";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IApe__factory {
  static readonly abi = _abi;
  static createInterface(): IApeInterface {
    return new utils.Interface(_abi) as IApeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IApe {
    return new Contract(address, _abi, signerOrProvider) as IApe;
  }
}
