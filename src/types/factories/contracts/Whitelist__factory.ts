/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Whitelist, WhitelistInterface } from "../../contracts/Whitelist";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteAddressIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whiteAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
    ],
    name: "whiteAddressesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108f08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806376aed4f7116100765780638da5cb5b1161005b5780638da5cb5b1461017e578063de34621f1461018f578063f2fde38b146101ba57600080fd5b806376aed4f71461010b5780637d22c35c1461013657600080fd5b806313734197146100a8578063337d0127146100db57806343c68d54146100f0578063715018a614610103575b600080fd5b6100c86100b6366004610733565b60009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100ee6100e936600461074c565b6101cd565b005b6100ee6100fe36600461074c565b6104a8565b6100ee6105a8565b61011e6101193660046107cb565b6105bc565b6040516001600160a01b0390911681526020016100d2565b61016e610144366004610809565b60009182526002602090815260408084206001600160a01b03939093168452919052902054151590565b60405190151581526020016100d2565b6000546001600160a01b031661011e565b6100c861019d366004610809565b600260209081526000928352604080842090915290825290205481565b6100ee6101c8366004610835565b6105f4565b6101d5610689565b60005b818110156104a25761020b848484848181106101f6576101f6610857565b90506020020160208101906101449190610835565b156104905760008481526002602052604081206001908286868681811061023457610234610857565b90506020020160208101906102499190610835565b6001600160a01b03166001600160a01b03168152602001908152602001600020546102749190610883565b60008681526001602081905260409091205491925061029291610883565b8114156103385760008581526001602052604090208054806102b6576102b661089a565b60008281526020808220830160001990810180546001600160a01b03191690559092019092558682526002905260408120908585858181106102fa576102fa610857565b905060200201602081019061030f9190610835565b6001600160a01b03166001600160a01b031681526020019081526020016000206000905561048e565b600085815260016020819052604082208054909161035591610883565b8154811061036557610365610857565b60009182526020808320909101548883526001909152604090912080546001600160a01b0390921692508291849081106103a1576103a1610857565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394909416939093179092558781526001909152604090208054806103e9576103e961089a565b600082815260209020810160001990810180546001600160a01b03191690550190556104168260016108b0565b60008781526002602081815260408084206001600160a01b0387168552808352908420949094558983525286868681811061045357610453610857565b90506020020160208101906104689190610835565b6001600160a01b03166001600160a01b0316815260200190815260200160002060009055505b505b8061049a816108c8565b9150506101d8565b50505050565b6104b0610689565b60005b818110156104a2576104d1848484848181106101f6576101f6610857565b6105965760008481526001602052604090208383838181106104f5576104f5610857565b905060200201602081019061050a9190610835565b8154600180820184556000938452602080852090920180546001600160a01b0319166001600160a01b03949094169390931790925586835290815260408083205460029092528220909185858581811061056657610566610857565b905060200201602081019061057b9190610835565b6001600160a01b031681526020810191909152604001600020555b806105a0816108c8565b9150506104b3565b6105b0610689565b6105ba60006106e3565b565b600160205281600052604060002081815481106105d857600080fd5b6000918252602090912001546001600160a01b03169150829050565b6105fc610689565b6001600160a01b03811661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610686816106e3565b50565b6000546001600160a01b031633146105ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610674565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561074557600080fd5b5035919050565b60008060006040848603121561076157600080fd5b83359250602084013567ffffffffffffffff8082111561078057600080fd5b818601915086601f83011261079457600080fd5b8135818111156107a357600080fd5b8760208260051b85010111156107b857600080fd5b6020830194508093505050509250925092565b600080604083850312156107de57600080fd5b50508035926020909101359150565b80356001600160a01b038116811461080457600080fd5b919050565b6000806040838503121561081c57600080fd5b8235915061082c602084016107ed565b90509250929050565b60006020828403121561084757600080fd5b610850826107ed565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108955761089561086d565b500390565b634e487b7160e01b600052603160045260246000fd5b600082198211156108c3576108c361086d565b500190565b60006000198214156108dc576108dc61086d565b506001019056fea164736f6c6343000809000a";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
