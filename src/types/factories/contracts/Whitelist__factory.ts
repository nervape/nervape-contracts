/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Whitelist, WhitelistInterface } from "../../contracts/Whitelist";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteAddressIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whiteAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107a88061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637d22c35c1161005b5780637d22c35c146100ed5780638da5cb5b14610135578063de34621f14610146578063f2fde38b1461017f57600080fd5b8063337d01271461008d57806343c68d54146100a2578063715018a6146100b557806376aed4f7146100bd575b600080fd5b6100a061009b36600461061c565b610192565b005b6100a06100b036600461061c565b610391565b6100a0610491565b6100d06100cb36600461069b565b6104a5565b6040516001600160a01b0390911681526020015b60405180910390f35b6101256100fb3660046106d9565b60009182526002602090815260408084206001600160a01b03939093168452919052902054151590565b60405190151581526020016100e4565b6000546001600160a01b03166100d0565b6101716101543660046106d9565b600260209081526000928352604080842090915290825290205481565b6040519081526020016100e4565b6100a061018d366004610705565b6104dd565b61019a610572565b60005b8181101561038b576101d0848484848181106101bb576101bb610727565b90506020020160208101906100fb9190610705565b15610379576000848152600260205260408120818585858181106101f6576101f6610727565b905060200201602081019061020b9190610705565b6001600160a01b0316815260208082019290925260409081016000908120548882526001938490529181208054929450909290916102499190610753565b8154811061025957610259610727565b60009182526020808320909101548883526001909152604090912080546001600160a01b03909216925082918490811061029557610295610727565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394909416939093179092558781526001909152604090208054806102dd576102dd61076a565b60008281526020808220830160001990810180546001600160a01b0319169055909201909255878252600280825260408084206001600160a01b038616855280845290842086905589845291529086868681811061033d5761033d610727565b90506020020160208101906103529190610705565b6001600160a01b03166001600160a01b031681526020019081526020016000206000905550505b8061038381610780565b91505061019d565b50505050565b610399610572565b60005b8181101561038b576103ba848484848181106101bb576101bb610727565b61047f5760008481526001602052604090208383838181106103de576103de610727565b90506020020160208101906103f39190610705565b8154600180820184556000938452602080852090920180546001600160a01b0319166001600160a01b03949094169390931790925586835290815260408083205460029092528220909185858581811061044f5761044f610727565b90506020020160208101906104649190610705565b6001600160a01b031681526020810191909152604001600020555b8061048981610780565b91505061039c565b610499610572565b6104a360006105cc565b565b600160205281600052604060002081815481106104c157600080fd5b6000918252602090912001546001600160a01b03169150829050565b6104e5610572565b6001600160a01b0381166105665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61056f816105cc565b50565b6000546001600160a01b031633146104a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006040848603121561063157600080fd5b83359250602084013567ffffffffffffffff8082111561065057600080fd5b818601915086601f83011261066457600080fd5b81358181111561067357600080fd5b8760208260051b850101111561068857600080fd5b6020830194508093505050509250925092565b600080604083850312156106ae57600080fd5b50508035926020909101359150565b80356001600160a01b03811681146106d457600080fd5b919050565b600080604083850312156106ec57600080fd5b823591506106fc602084016106bd565b90509250929050565b60006020828403121561071757600080fd5b610720826106bd565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156107655761076561073d565b500390565b634e487b7160e01b600052603160045260246000fd5b60006000198214156107945761079461073d565b506001019056fea164736f6c6343000809000a";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
