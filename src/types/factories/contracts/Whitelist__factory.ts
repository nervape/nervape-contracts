/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Whitelist, WhitelistInterface } from "../../contracts/Whitelist";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addrs",
        type: "address[]",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105788061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80637d22c35c116100505780637d22c35c146100a75780638da5cb5b146100ea578063f2fde38b1461010557600080fd5b8063337d01271461007757806343c68d541461008c578063715018a61461009f575b600080fd5b61008a610085366004610443565b610118565b005b61008a61009a366004610443565b6101fa565b61008a6102d8565b6100d56100b53660046104de565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100e1565b61008a61011336600461050a565b6102ec565b610120610381565b60005b818110156101f45760008481526001602052604081209084848481811061014c5761014c61052c565b9050602002016020810190610161919061050a565b6001600160a01b0316815260208101919091526040016000205460ff16156101e2576000848152600160205260408120818585858181106101a4576101a461052c565b90506020020160208101906101b9919061050a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790555b806101ec81610542565b915050610123565b50505050565b610202610381565b60005b818110156101f45760008481526001602052604081209084848481811061022e5761022e61052c565b9050602002016020810190610243919061050a565b6001600160a01b0316815260208101919091526040016000205460ff166102c6576000848152600160208190526040822090918585858181106102885761028861052c565b905060200201602081019061029d919061050a565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790555b806102d081610542565b915050610205565b6102e0610381565b6102ea60006103db565b565b6102f4610381565b6001600160a01b0381166103755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61037e816103db565b50565b6000546001600160a01b031633146102ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036c565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006040848603121561045857600080fd5b83359250602084013567ffffffffffffffff8082111561047757600080fd5b818601915086601f83011261048b57600080fd5b81358181111561049a57600080fd5b8760208260051b85010111156104af57600080fd5b6020830194508093505050509250925092565b80356001600160a01b03811681146104d957600080fd5b919050565b600080604083850312156104f157600080fd5b82359150610501602084016104c2565b90509250929050565b60006020828403121561051c57600080fd5b610525826104c2565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561056457634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(overrides || {}) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
